{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Documentos/curso_jhonmircha/src/context/crudContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { helpHttp } from '../helpers/helpHttp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crudContext = /*#__PURE__*/createContext();\nconst API = helpHttp();\nconst URL = 'http://localhost:5000/family';\nexport const CrudContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [db, setDb] = useState(null);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    API.get(URL).then(res => {\n      if (!res.err) {\n        setDb(res);\n        setError(null);\n      } else {\n        setDb(null);\n        setError(res);\n      }\n\n      setLoading(false);\n    });\n  }, []);\n\n  const createData = data => {\n    data.id = db.length;\n    let options = {\n      body: data,\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    API.post(URL, options).then(res => {\n      res.err ? setError(res) : setDb([...db, data]);\n    });\n  };\n\n  const updateData = data => {\n    let endpoint = `${URL}/${data.id}`;\n    let options = {\n      body: data,\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    API.put(endpoint, options).then(res => {\n      res.err ? setError(res) : setDb(db.map(el => el.id === data.id ? data : el));\n    });\n    alert('¡Datos Actualizados!');\n  };\n\n  const deleteData = id => {\n    let isDelete = window.confirm(`¿Desea borrar a el usuario ${id}`);\n    let endpoint = `${URL}/${id}`;\n    let options = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    if (isDelete) {\n      API.del(endpoint, options).then(res => {\n        if (res.err) {\n          setError(res);\n        } else {\n          setDb(db.filter(el => el.id !== id));\n          alert('¡Dato Eliminado!');\n        }\n      });\n    } else {\n      return;\n    }\n  };\n\n  const value = {\n    db,\n    dataToEdit,\n    loading,\n    error,\n    createData,\n    updateData,\n    setDataToEdit,\n    deleteData\n  };\n  return /*#__PURE__*/_jsxDEV(crudContext.Provider, {\n    value: value,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CrudContextProvider, \"DyX+YwxBxG9WDWSVG/eD4NMTMpI=\");\n\n_c = CrudContextProvider;\nexport const useCrudContext = () => {\n  _s2();\n\n  return useContext(crudContext);\n};\n\n_s2(useCrudContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default crudContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","helpHttp","crudContext","API","URL","CrudContextProvider","children","db","setDb","dataToEdit","setDataToEdit","error","setError","loading","setLoading","get","then","res","err","createData","data","id","length","options","body","headers","post","updateData","endpoint","put","map","el","alert","deleteData","isDelete","window","confirm","del","filter","value","useCrudContext"],"sources":["/home/jesus/Documentos/curso_jhonmircha/src/context/crudContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react'\nimport { helpHttp } from '../helpers/helpHttp'\n\nconst crudContext = createContext()\n\nconst API = helpHttp()\nconst URL = 'http://localhost:5000/family'\n\nexport const CrudContextProvider = ({ children }) => {\n  const [db, setDb] = useState(null)\n  const [dataToEdit, setDataToEdit] = useState(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    API.get(URL).then((res) => {\n      if (!res.err) {\n        setDb(res)\n        setError(null)\n      } else {\n        setDb(null)\n        setError(res)\n      }\n      setLoading(false)\n    })\n  }, [])\n\n  const createData = (data) => {\n    data.id = db.length\n    let options = {\n      body: data,\n      headers: { 'content-type': 'application/json' },\n    }\n\n    API.post(URL, options).then((res) => {\n      res.err ? setError(res) : setDb([...db, data])\n    })\n  }\n\n  const updateData = (data) => {\n    let endpoint = `${URL}/${data.id}`\n    let options = {\n      body: data,\n      headers: { 'content-type': 'application/json' },\n    }\n\n    API.put(endpoint, options).then((res) => {\n      res.err\n        ? setError(res)\n        : setDb(db.map((el) => (el.id === data.id ? data : el)))\n    })\n    alert('¡Datos Actualizados!')\n  }\n\n  const deleteData = (id) => {\n    let isDelete = window.confirm(`¿Desea borrar a el usuario ${id}`)\n\n    let endpoint = `${URL}/${id}`\n    let options = { headers: { 'content-type': 'application/json' } }\n\n    if (isDelete) {\n      API.del(endpoint, options).then((res) => {\n        if (res.err) {\n          setError(res)\n        } else {\n          setDb(db.filter((el) => el.id !== id))\n          alert('¡Dato Eliminado!')\n        }\n      })\n    } else {\n      return\n    }\n  }\n\n  const value = {\n    db,\n    dataToEdit,\n    loading,\n    error,\n    createData,\n    updateData,\n    setDataToEdit,\n    deleteData,\n  }\n\n  return <crudContext.Provider value={value}> {children} </crudContext.Provider>\n}\n\nexport const useCrudContext = () => useContext(crudContext)\n\nexport default crudContext\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Documentos/curso_jhonmircha/src/components/crud-api/CrudApi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { helpHttp } from '../../helpers/helpHttp';\nimport CrudForm from '../crud/CrudForm';\nimport CrudTable from '../crud/CrudTable';\nimport Loader from './Loader';\nimport Message from '../Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CrudApi = () => {\n  _s();\n\n  const [db, setDb] = useState(null);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  let api = helpHttp();\n  let url = 'http://localhost:5000/family';\n  useEffect(() => {\n    setLoading(true);\n    helpHttp().get(url).then(res => {\n      if (!res.err) {\n        setDb(res);\n        setError(null);\n      } else {\n        setDb(null);\n        setError(res);\n      }\n\n      setLoading(false);\n    });\n  }, [url]);\n\n  const createData = data => {\n    data.id = db.length;\n    let options = {\n      body: data,\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    api.post(url, options).then(res => {\n      res.err ? setError(res) : setDb([...db, data]);\n    });\n  };\n\n  const updateData = data => {\n    let endpoint = `${url}/${data.id}`;\n    let options = {\n      body: data,\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    api.put(endpoint, options).then(res => {\n      res.err ? setError(res) : setDb(db.map(el => el.id === data.id ? data : el));\n    });\n    alert('¡Datos Actualizados!');\n  };\n\n  const deleteData = id => {\n    let isDelete = window.confirm(`¿Desea borrar a el usuario ${id}`);\n    let endpoint = `${url}/${id}`;\n    let options = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    if (isDelete) {\n      api.del(endpoint, options).then(res => {\n        if (res.err) {\n          setError(res);\n        } else {\n          setDb(db.filter(el => el.id !== id));\n          alert('¡Dato Eliminado!');\n        }\n      });\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center fw-bold\",\n      children: \"Crud API: JSON SERVER \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CrudForm, {\n      createData: createData,\n      updateData: updateData,\n      setDataToEdit: setDataToEdit,\n      dataToEdit: dataToEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      message: `Error ${error.status}: ${error.statusText}`,\n      bgColor: '#dc3545'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), db && /*#__PURE__*/_jsxDEV(CrudTable, {\n      data: db,\n      setDataToEdit: setDataToEdit,\n      deleteData: deleteData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrudApi, \"DyX+YwxBxG9WDWSVG/eD4NMTMpI=\");\n\n_c = CrudApi;\nexport default CrudApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudApi\");","map":{"version":3,"names":["React","useEffect","useState","helpHttp","CrudForm","CrudTable","Loader","Message","CrudApi","db","setDb","dataToEdit","setDataToEdit","error","setError","loading","setLoading","api","url","get","then","res","err","createData","data","id","length","options","body","headers","post","updateData","endpoint","put","map","el","alert","deleteData","isDelete","window","confirm","del","filter","status","statusText"],"sources":["/home/jesus/Documentos/curso_jhonmircha/src/components/crud-api/CrudApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { helpHttp } from '../../helpers/helpHttp'\nimport CrudForm from '../crud/CrudForm'\nimport CrudTable from '../crud/CrudTable'\nimport Loader from './Loader'\nimport Message from '../Message'\n\nconst CrudApi = () => {\n  const [db, setDb] = useState(null)\n  const [dataToEdit, setDataToEdit] = useState(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  let api = helpHttp()\n  let url = 'http://localhost:5000/family'\n\n  useEffect(() => {\n    setLoading(true)\n    helpHttp()\n      .get(url)\n      .then((res) => {\n        if (!res.err) {\n          setDb(res)\n          setError(null)\n        } else {\n          setDb(null)\n          setError(res)\n        }\n        setLoading(false)\n      })\n  }, [url])\n\n  const createData = (data) => {\n    data.id = db.length\n    let options = {\n      body: data,\n      headers: { 'content-type': 'application/json' },\n    }\n\n    api.post(url, options).then((res) => {\n      res.err ? setError(res) : setDb([...db, data])\n    })\n  }\n\n  const updateData = (data) => {\n    let endpoint = `${url}/${data.id}`\n    let options = {\n      body: data,\n      headers: { 'content-type': 'application/json' },\n    }\n\n    api.put(endpoint, options).then((res) => {\n      res.err\n        ? setError(res)\n        : setDb(db.map((el) => (el.id === data.id ? data : el)))\n    })\n    alert('¡Datos Actualizados!')\n  }\n\n  const deleteData = (id) => {\n    let isDelete = window.confirm(`¿Desea borrar a el usuario ${id}`)\n\n    let endpoint = `${url}/${id}`\n    let options = { headers: { 'content-type': 'application/json' } }\n\n    if (isDelete) {\n      api.del(endpoint, options).then((res) => {\n        if (res.err) {\n          setError(res)\n        } else {\n          setDb(db.filter((el) => el.id !== id))\n          alert('¡Dato Eliminado!')\n        }\n      })\n    } else {\n      return\n    }\n  }\n\n  return (\n    <div className='container'>\n      <h2 className='text-center fw-bold'>Crud API: JSON SERVER </h2>\n      <CrudForm\n        createData={createData}\n        updateData={updateData}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n      {loading && <Loader />}\n      {error && (\n        <Message\n          message={`Error ${error.status}: ${error.statusText}`}\n          bgColor={'#dc3545'}\n        />\n      )}\n      {db && (\n        <CrudTable\n          data={db}\n          setDataToEdit={setDataToEdit}\n          deleteData={deleteData}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default CrudApi\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}